{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","id","tabs","selectedTabId","onTabSelected","findedTab","find","tab","className","map","href","onClick","handleTabClick","title","content","App","useState","selectedTab","setSelectedTab","selectedTitle","ReactDOM","render","document","getElementById"],"mappings":"8KAYaA,EAA4B,SAAC,GAInC,IACgBC,EAJrBC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAYMC,GAVeJ,EAUSE,EAT5BD,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIN,KAAOA,MAAOC,EAAK,IAW5C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAF,GACR,OACE,oBAEEC,UAAWH,EAAUJ,KAAOM,EAAIN,GAAK,YAAc,GACnD,UAAQ,MAHV,SAKE,mBACES,KAAI,WAAMH,EAAIN,IACd,UAAQ,UACRU,QAAS,kBAtBF,SAACJ,GAClBA,EAAIN,KAAOE,GACbC,EAAcG,GAoBaK,CAAeL,IAHhC,SAKGA,EAAIM,SATFN,EAAIN,WAiBnB,qBAAKO,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAUS,cChDNZ,G,kBAAO,CAClB,CAAED,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,iBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAAsCC,mBAASd,EAAK,GAAGD,IAAvD,mBAAOgB,EAAP,KAAoBC,EAApB,KACMC,EAAa,UAAGjB,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIN,KAAOgB,YAAjC,aAAG,EAA4CJ,MAKlE,OACE,sBAAKL,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,KAEtB,cAAC,EAAD,CACEjB,KAAMA,EACNC,cAAec,EACfb,cAZiB,WAAyB,IAAxBG,EAAuB,uDAAZL,EAAK,GACtCgB,EAAeX,EAAIN,WCbvBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.94e510e4.chunk.js","sourcesContent":["export interface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ninterface TabsProps {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = (id: string): Tab => (\n    tabs.find((tab) => tab.id === id) || tabs[0]\n  );\n\n  const handleTabClick = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const findedTab = selectedTab(selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                key={tab.id}\n                className={findedTab.id === tab.id ? 'is-active' : ''}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTabClick(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {findedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tab, Tabs } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0].id);\n  const selectedTitle = tabs.find((tab) => tab.id === selectedTab)?.title;\n  const setTabSelected = (tab: Tab = tabs[0]) => {\n    setSelectedTab(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTitle}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab}\n        onTabSelected={setTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}